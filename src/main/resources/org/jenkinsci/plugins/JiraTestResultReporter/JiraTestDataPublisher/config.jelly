<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:f="/lib/form" xmlns:l="/lib/layout">
    <j:choose>
        <j:when test="${ descriptor.restClient != null }">
            <st:adjunct includes="org.jenkinsci.plugins.JiraTestResultReporter.JiraTestDataPublisher.jira-test-data-publisher-resource"/>
            <f:entry title="Project Key" field="projectKey">
                <f:textbox/>
            </f:entry>
            <f:validateButton title="Validate settings"
                              method="validateProjectKey" with="projectKey" />
            <f:entry title="Issue Type" field="issueType">
                <f:select/>
            </f:entry>
            <f:entry title="Auto raise issues" field="autoRaiseIssue" >
                <f:checkbox/>
            </f:entry>

            <f:entry title="Auto resolve issues" field="autoResolveIssue" >
                <f:checkbox/>
            </f:entry>

            <f:entry title="Auto unlink issues when test passes" field="autoUnlinkIssue">
                <f:checkbox/>
            </f:entry>
            
            <f:entry title="Include additional junit-attachment attachments" field="additionalAttachments">
                <f:checkbox/>
            </f:entry>

            <f:advanced>
                <j:set var="items" value="${ instance.configs != null ? instance.configs : descriptor.templates }"/>
                <f:entry field="configs">
                    <f:hetero-list name="configs"
                                   hasHeader="true"
                                   descriptors="${descriptor.listDescriptors}"
                                   items="${items}"
                                   addCaption="Add Field Configuration"
                            />
                </f:entry>
                <f:entry>
                    <j:set value="jiraTestDataPublisherDescriptor_${h.generateId()}" var="descriptorProxyVarName"/>
                    <st:bind value="${descriptor}" var="${descriptorProxyVarName}"/>
                    <div class="jira-validate-issue-config-container">
                        <div align="right">
                            <button class="validateJiraIssueConfig jenkins-button"
                                    data-descriptor-proxy-var-name="${descriptorProxyVarName}">Validate Fields</button>
                            <l:icon class="icon-help icon-sm show-hide-jira-issue-config" style="cursor:pointer"/>
                            <img src="${imagesURL}/spinner.gif" style="display:none" id="jiraSpinner"/>
                        </div>
                        <div class="help helpValidateJiraIssueConfig" style="display:none">
                            <p>Since Jira Rest API does not offer a way to validate field values, the plugin will try to create and delete an issue
                                and it will print the errors (if any).</p>
                            <p><b>WARNING: The user configured in the global configuration page needs to have permission to delete issues.</b></p>
                            <p>Variables will not be expanded.</p>
                        </div>
                    </div>
                    <div id="JiraIssueConfigErrors">
                    </div>
                </f:entry>
            </f:advanced>
        </j:when>
        <j:otherwise>
            <f:entry>
                <div class="error">
                    Incomplete JIRA connection configuration.<br/>
                    Please check <a href="${rootURL}/configure" target="_new">the system configuration</a>.
                </div>
            </f:entry>
        </j:otherwise>
    </j:choose>
</j:jelly>
